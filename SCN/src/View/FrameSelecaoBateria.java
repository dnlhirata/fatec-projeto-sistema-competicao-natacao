package View;

import Controller.gravaBateria;
import Controller.gravaCompetidor;
import Controller.pesquisaBateria;
import Controller.pesquisaCompeticao;
import Controller.pesquisaCompetidor;
import Controller.pesquisaModalidade;
import Model.Uteis;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Daniel
 */
public class FrameSelecaoBateria extends javax.swing.JFrame {

    DefaultTableModel model;
    Uteis funcoes = new Uteis();

    /**
     * Creates new form FrameBaterias
     */
    public FrameSelecaoBateria() throws SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelSelecao = new javax.swing.JPanel();
        btSelecionaBateria = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btCadastrarBateria = new javax.swing.JButton();
        cbBaterias = new javax.swing.JComboBox<>();
        btAlteraBateria = new javax.swing.JButton();
        btFinal = new javax.swing.JButton();
        btRelatorio = new javax.swing.JButton();
        lbNomeCompeticao = new javax.swing.JLabel();
        mbBateria = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuAjuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painelSelecao.setBorder(javax.swing.BorderFactory.createTitledBorder("BATERIAS"));

        btSelecionaBateria.setText("SELECIONAR BATERIA");
        btSelecionaBateria.setPreferredSize(new java.awt.Dimension(120, 40));
        btSelecionaBateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionaBateriaActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.setPreferredSize(new java.awt.Dimension(80, 30));
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.setPreferredSize(new java.awt.Dimension(80, 30));
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btCadastrarBateria.setText("CADASTRAR BATERIA");
        btCadastrarBateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarBateriaActionPerformed(evt);
            }
        });

        cbBaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbBateriasMouseClicked(evt);
            }
        });
        cbBaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBateriasActionPerformed(evt);
            }
        });

        btAlteraBateria.setText("ALTERAR BATERIA");
        btAlteraBateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlteraBateriaActionPerformed(evt);
            }
        });

        btFinal.setText("Gerar Final");
        btFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalActionPerformed(evt);
            }
        });

        btRelatorio.setText("Relat√≥rio");
        btRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelSelecaoLayout = new javax.swing.GroupLayout(painelSelecao);
        painelSelecao.setLayout(painelSelecaoLayout);
        painelSelecaoLayout.setHorizontalGroup(
            painelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSelecaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(btRelatorio)
                .addGap(48, 48, 48)
                .addComponent(btAlteraBateria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSelecionaBateria, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btFinal)
                .addGap(40, 40, 40)
                .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(painelSelecaoLayout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addGroup(painelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btCadastrarBateria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbBaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(368, Short.MAX_VALUE))
        );
        painelSelecaoLayout.setVerticalGroup(
            painelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelSelecaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCadastrarBateria)
                .addGap(72, 72, 72)
                .addComponent(cbBaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addGroup(painelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btFinal)
                        .addComponent(btRelatorio))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelSelecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btSelecionaBateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btAlteraBateria, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        lbNomeCompeticao.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lbNomeCompeticao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        menuArquivo.setText("Arquivo");
        mbBateria.add(menuArquivo);

        menuAjuda.setText("Ajuda");
        mbBateria.add(menuAjuda);

        setJMenuBar(mbBateria);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbNomeCompeticao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelSelecao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbNomeCompeticao, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(painelSelecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSelecionaBateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionaBateriaActionPerformed
        try {
            FrameBateria frameBateria = new FrameBateria();
            int codCompeticao = pesquisaCompeticao.pesquisaCompeticao(this.lbNomeCompeticao.getText());
            int codModalidade = pesquisaModalidade.pesquisaModalidade(this.getName());
            model = funcoes.montaTabelaCompetidor(frameBateria.tableListagem, frameBateria.spCompetidores);
            pesquisaCompetidor.pesquisaCompetidor(model, (String) this.cbBaterias.getSelectedItem(), codModalidade, codCompeticao);
            frameBateria.setTitle((String) this.cbBaterias.getSelectedItem());
            frameBateria.setName(this.getName());
            frameBateria.setTitle("MODALIDADE " + this.getName() + " - BATERIA " + this.cbBaterias.getSelectedItem());
            frameBateria.lbNomeCompeticao.setText(this.lbNomeCompeticao.getText());
            frameBateria.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_btSelecionaBateriaActionPerformed

    private void btCadastrarBateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarBateriaActionPerformed
        String nomeCompeticao = (String) this.lbNomeCompeticao.getText();
        int codModalidade, numBaterias, codCompeticao;
        try {
            FrameAdicionaBateria novoFrame = new FrameAdicionaBateria();
            novoFrame.lbNomeCompeticao.setText(nomeCompeticao);
            novoFrame.setName(this.getName());
            codModalidade = pesquisaModalidade.pesquisaModalidade(this.getName());
            codCompeticao = pesquisaCompeticao.pesquisaCompeticao(this.lbNomeCompeticao.getText());
            numBaterias = pesquisaBateria.qtdBaterias(codModalidade, codCompeticao);
            for (int i = 1; i < numBaterias; i++) {
                novoFrame.cbNumero.addItem(Integer.toString(i));
            }
            novoFrame.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btCadastrarBateriaActionPerformed

    private void cbBateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBateriasActionPerformed


    }//GEN-LAST:event_cbBateriasActionPerformed

    private void cbBateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbBateriasMouseClicked
        /*this.cbBaterias.removeAllItems();
        try {
            int codCompeticao, codModalidade;
            codCompeticao = pesquisaCompeticao.pesquisaCompeticao(this.lbNomeCompeticao.getText());
            codModalidade = pesquisaModalidade.pesquisaModalidade(this.getName());
            ArrayList<String> baterias = pesquisaBateria.carregaComboBoxBateria(codCompeticao, codModalidade);
            for (int i = 0; i < baterias.size(); i++) {
                cbBaterias.addItem(baterias.get(i));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_cbBateriasMouseClicked

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        FrameSelecaoModalidade frameSelecao;
        int codCompeticao;
        try {
            frameSelecao = new FrameSelecaoModalidade();
            frameSelecao.lbNomeCompeticao.setText(this.lbNomeCompeticao.getText());
            codCompeticao = pesquisaCompeticao.pesquisaCompeticao(this.lbNomeCompeticao.getText());
            ArrayList<String> modalidades = pesquisaModalidade.carregaComboBoxModalidade(codCompeticao);
            for (int i = 0; i < modalidades.size(); i++) {
                frameSelecao.cbModalidade.addItem(modalidades.get(i));
            }
            frameSelecao.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btSairActionPerformed

    private void btAlteraBateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlteraBateriaActionPerformed

        try {
            FrameAlteraBateria frameBateria = new FrameAlteraBateria();
            frameBateria.lbNomeCompeticao.setText(this.lbNomeCompeticao.getText());
            frameBateria.setName(this.getName());
            int codCompeticao = pesquisaCompeticao.pesquisaCompeticao(this.lbNomeCompeticao.getText());
            int codModalidade = pesquisaModalidade.pesquisaModalidade(this.getName());
            String numBateria = (String) this.cbBaterias.getSelectedItem();
            int numBaterias = pesquisaBateria.qtdBaterias(codModalidade, codCompeticao);
            for (int i = 1; i < numBaterias; i++) {
                frameBateria.cbNumero.addItem(Integer.toString(i));
            }

            ResultSet rs = pesquisaBateria.pesquisaBateria(numBateria, codCompeticao, codModalidade);

            while (rs.next()) {
                frameBateria.cbNumero.setSelectedItem(rs.getString("NUMERO"));
                frameBateria.ftfData.setText(rs.getString("DATA"));
                frameBateria.ftfHoraInicio.setText(rs.getString("HORA_INI"));
                frameBateria.ftfHoraFim.setText(rs.getString("HORA_FIM"));
                frameBateria.cbStatus.setSelectedItem(rs.getString("STATUS"));
            }

            frameBateria.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAlteraBateriaActionPerformed

    private void btFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalActionPerformed

        try {
            int codCompeticao = pesquisaCompeticao.pesquisaCompeticao(this.lbNomeCompeticao.getText());
            int codModalidade = pesquisaModalidade.pesquisaModalidade(this.getName());
            boolean bateriaValidada = gravaBateria.cadastraBateriaFinal(codModalidade, codCompeticao);
            gravaCompetidor.cadastraCompetidoresFinal(codModalidade, codCompeticao, bateriaValidada);
            
        } catch (Exception ex) {
            Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btFinalActionPerformed

    private void btRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRelatorioActionPerformed
        ResultSet rs;
        try {
            int codCompeticao = pesquisaCompeticao.pesquisaCompeticao(this.lbNomeCompeticao.getText());
            int codModalidade = pesquisaModalidade.pesquisaModalidade(this.getName());
            rs = pesquisaCompetidor.relatorioCompetidoresBateria(codModalidade, codCompeticao);
            JRResultSetDataSource jrRS = new JRResultSetDataSource(rs);
            JasperPrint jp;
            jp = JasperFillManager.fillReport("C:\\Users\\dnlhi\\Dropbox\\FATEC\\2017\\2¬∫ Semestre\\Programa√ß√£o Orientada a Objetos Avan√ßada\\NetBeansProjects\\Projeto\\SCN\\relatorio\\MyReports\\competidoresPorBateria.jasper", null, jrRS);
            JasperViewer relatorio = new JasperViewer(jp, false);
            relatorio.setVisible(true);
            relatorio.toFront();
        } catch (SQLException | JRException ex) {
            Logger.getLogger(FrameSelecaoPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrameBateria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btRelatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameSelecaoBateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameSelecaoBateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameSelecaoBateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameSelecaoBateria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrameSelecaoBateria().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(FrameSelecaoBateria.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlteraBateria;
    private javax.swing.JButton btCadastrarBateria;
    private javax.swing.JButton btFinal;
    private javax.swing.JButton btRelatorio;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btSelecionaBateria;
    private javax.swing.JButton btVoltar;
    public javax.swing.JComboBox<String> cbBaterias;
    public javax.swing.JLabel lbNomeCompeticao;
    private javax.swing.JMenuBar mbBateria;
    private javax.swing.JMenu menuAjuda;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JPanel painelSelecao;
    // End of variables declaration//GEN-END:variables
}
